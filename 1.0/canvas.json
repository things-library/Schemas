{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schema.thingslibrary.io/1.0/schema.json",
    "$comment": "Service Canvas is created by Starlight Software Co to strongly type service related settings.",
    "title": "Service Canvas",
    "description": "Microservice canvas definition document",
    "type": "object",
    "properties": {
        "$version": {
            "type": "string",
            "title": "Canvas Version",
            "default": "1.0.0.0",
            "readOnly": true
        },

        "Info": {
            "$ref": "#/$defs/CanvasInfo"
        },

        "HealthChecks": {
            "$ref": "#/$defs/CanvasHealthChecks"
        },

        "Auth": {
            "$ref": "#/$defs/CanvasAuth"
        },

        "Database": {
            "$ref": "#/$defs/CanvasDatabase"
        },

        "Cache": {
            "$ref": "#/$defs/CanvasCache"
        },

        "required": [
            "Info"
        ]
    },

    "$defs": {

        "CanvasInfo": {
            "type": "object",
            "title": "Service Information",
            "description": "Base service defintions specific to the service",
            "properties": {

                "Namespace": {
                    "type": "string",
                    "title": "Service Id (Namespace)",
                    "minLength": 3,
                    "maxLength": 200
                },
                "Name": {
                    "type": "string",
                    "title": "Service Name",
                    "maxLength": 100
                },
                "Description": {
                    "type": "string",
                    "title": "Service Description",
                    "maxLength": 500
                },
                "AppGroupName": {
                    "type": "string",
                    "title": "Service Group Name",
                    "maxLength": 100
                },
                "Version": {
                    "type": "string",
                    "title": "Version",
                    "readOnly": true
                },

                "Host": {
                    "type": "string",
                    "title": "DNS Host Uri",
                    "format": "uri"
                },
                "RoutePrefix": {
                    "type": "string",
                    "title": "Route Prefix Url",
                    "format": "uri-reference"
                },
                "Environment": {
                    "type": "string",
                    "title": "Environment Name",
                    "maxLength": 100
                },

                "Capabilities": {
                    "type": "object",
                    "title": "Capabilities",
                    "description": "Capabilities that this service provides in a comma delimited listing",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },

                "Cors": {
                    "$ref": "#/$defs/CanvasInfoCors"
                },

                "Contact": {
                    "$ref": "#/$defs/CanvasInfoContact"
                }
            },
            "required": [
                "Namespace",
                "Name",
                "Description",
                "Environment",
                "Contact"
            ]
        },

        "CanvasInfoCors": {
            "type": "object",
            "title": "Open API Settings",
            "description": "OpenAPI settings and details.",
            "properties": {
                "Origin": {
                    "type": "string",
                    "title": "Origin",
                    "default": "*"
                },
                "Methods": {
                    "type": "array",
                    "title": "Methods",
                    "items": {
                        "type": "string"
                    }
                },
                "Headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },

            "required": [
                "Origin",
                "Methods",
                "Headers"
            ]
        },

        "CanvasInfoContact": {
            "type": "object",
            "title": "Service Point of Contact",
            "description": "The externally facing point of contact for the this service.",
            "properties": {

                "Name": {
                    "type": "string",
                    "title": "Name",
                    "maxLength": 200
                },

                "Email": {
                    "type": "string",
                    "title": "Email",
                    "format": "email"
                },

                "Company": {
                    "type": "string",
                    "title": "Company",
                    "maxLength": 200
                },

                "Department": {
                    "type": "string",
                    "title": "Department",
                    "maxLength": 200
                },

                "ProjectUri": {
                    "type": "string",
                    "title": "Project Uri",
                    "format": "uri"
                }
            },

            "required": [
                "Name",
                "Email",
                "Company",
                "Department"
            ]
        },


        "CanvasHealthChecks": {
            "type": "object",
            "title": "Health Checks",
            "description": "Pathing to the health monitoring endpoints",
            "properties": {

                "LivenessUrl": {
                    "type": "string",
                    "title": "Liveness Url",
                    "description": "Used by various services to understand the general health of a service.",
                    "format": "uri-reference",

                    "default": "/health"
                },

                "ReadinessUrl": {
                    "type": "string",
                    "title": "Readiness Url",
                    "description": "Used by K8s to understand if a container should get incoming requests.",
                    "format": "uri-reference",

                    "default": "/health/ready"
                },

                "StartupUrl": {
                    "type": "string",
                    "title": "Startup Url",
                    "description": "Used by K8s to check when a newly deployed container is ready to accept requests.",
                    "format": "uri-reference",

                    "default": "/health/startup"
                }
            },
            "required": [
                "LivenessUrl"
            ]
        },

        "CanvasAuth": {
            "type": "object",
            "title": "Authentication",
            "properties": {

                "Name": {
                    "type": "string",
                    "title": "Name",
                    "maxLength": 200
                },

                "LoginUrl": {
                    "type": "string",
                    "title": "Login Url",
                    "format": "uri-reference"
                },

                "LogoutUrl": {
                    "type": "string",
                    "title": "Logout Url",
                    "format": "uri-reference"
                },

                "AccessDeniedUrl": {
                    "type": "string",
                    "title": "Access Denied Url",
                    "format": "uri-reference"
                },

                "ReturnUrlParameter": {
                    "type": "string",
                    "title": "Return Url Parameter",
                    "description": "Specifies the name of the query string parameter which is appended by the handler during a Challenge."
                },

                "ExpireTimeSpan": {
                    "type": "string",
                    "title": "Expire Time Span",
                    "description": "How long the auth ticket will remain valid after creation.",
                    "default": "00:01:00"
                },

                "SlidingExpiration": {
                    "type": "boolean",
                    "title": "Sliding Expiration",
                    "description": "When true, instructs the handler to re-issue a new token any time it processes a request which is more than halfway through the expiration window.",
                    "default": "00:01:00"
                },

                "Jwt": {
                    "$ref": "#/$defs/CanvasAuthJwt"
                },

                "OpenId": {
                    "$ref": "#/$defs/CanvasAuthOpenId"
                },

                "Cookie": {
                    "$ref": "#/$defs/CanvasInfoContact"
                },

                "AppRoles": {
                    "type": "array",
                    "title": "App Roles",
                    "items": {
                        "type": "string"
                    },
                    "default": [ "User:Read", "Developer:Write", "SystemManager:Write" ]
                },

                "PolicyClaimsMap": {
                    "title": "Security Policies",
                    "description": "A simple form with additional properties example.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "title": "App Roles",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "Name",
                "LoginUrl",
                "LogoutUrl",
                "AppRoles",
                "PolicyClaimsMap"
            ]
        },

        "CanvasAuthJwt": {
            "type": "object",
            "title": "JWT Authorization Details",
            "properties": {

                "Authority": {
                    "type": "string",
                    "title": "Authority",
                    "format": "uri"
                },
                "Issuer": {
                    "type": "string",
                    "title": "Issuer",
                    "format": "uri"
                },
                "Audience": {
                    "type": "string",
                    "title": "Audience",
                    "description": "Delimited list of valid audiences"
                },

                "ClientId": {
                    "type": "string",
                    "title": "Client Id"
                },
                "ClientSecret": {
                    "type": "string",
                    "title": "Client Secret",
                    "description": "If provided the tokens must be signed with this secret to be consided valid, otherwise signing keys will come from OIDC issuer"
                },

                "NameClaimType": {
                    "type": "string",
                    "title": "Name Claim Type",
                    "description": "The type of claim that the user name comes in using.",
                    "default": "name"
                },
                "RoleClaimType": {
                    "type": "string",
                    "title": "Role Claim Type",
                    "description": "The type of claim that the role comes in using.",
                    "default": "roles"
                },

                "DisableValidation": {
                    "type": "boolean",
                    "title": "Disable Validation",
                    "description": "Allow any provided JWT token to be considered valid, for lower environment testing purposes ONLY.",
                    "default": false
                }
            },
            "required": [
                "Authority",
                "Issuer",
                "Audience",
                "ClientId"
            ]
        },

        "CanvasAuthOpenId": {
            "type": "object",
            "title": "OIDC Authentication Details",
            "properties": {

                "Authority": {
                    "type": "string",
                    "title": "Authority",
                    "format": "uri"
                },

                "ClientId": {
                    "type": "string",
                    "title": "Client Id"
                },
                "ClientSecret": {
                    "type": "string",
                    "title": "Client Secret",
                    "description": "If provided the tokens must be signed with this secret to be consided valid, otherwise signing keys will come from OIDC issuer"
                },
                "CallbackUrl": {
                    "type": "string",
                    "title": "Callback Url",
                    "format": "uri"
                },

                "Scope": {
                    "type": "array",
                    "title": "Scope",
                    "description": "OIDC scope must contain 'openid' and usually contains 'profile' and 'email'.  The 'offline_access' scopes allows for token refreshing.",
                    "items": {
                        "type": "string"
                    },
                    "default": [ "openid", "offline_access" ]
                },

                "UseUserInfoForClaims": {
                    "type": "boolean",
                    "title": "Use User Info Endpoint for Claims",
                    "description": "If the claims should come from the user info endpoint instead",
                    "default": false
                }
            },
            "required": [
                "Authority",
                "ClientId",
                "ClientSecret",
                "CallbackUrl",
                "Scope"
            ]
        },

        "CanvasAuthCookie": {
            "type": "object",
            "title": "Cookie Authorization Details",
            "properties": {

                "Name": {
                    "type": "string",
                    "title": "Cookie Name",
                    "minLength": 3,
                    "maxLength": 200
                },
                "Path": {
                    "type": "string",
                    "title": "Path",
                    "format": "uri-reference",

                    "default": "/"
                },
                "Domain": {
                    "type": "string",
                    "title": "Domain"
                }
            },
            "required": [
                "Name"
            ]
        },

        "CanvasDatabase": {
            "type": "object",
            "title": "Database Dependency",
            "properties": {

                "Name": {
                    "type": "string",
                    "title": "Name"
                },

                "DatabaseType": {
                    "type": "string",
                    "title": "Database Type",
                    "enum": [ "AzureSql", "PostgreSQL", "MS SQL", "PostGIS" ]
                },

                "ConnectionStringVariable": {
                    "type": "string",
                    "title": "Connection String Variable"
                },

                "DisableMigrations": {
                    "type": "boolean",
                    "title": "Disable Auto Migrations"
                },

                "SeedTestData": {
                    "type": "boolean",
                    "title": "Enable Test Data Seeding"
                }
            },
            "required": [
                "Name",
                "DatabaseType",
                "ConnectionStringVariable"
            ]
        },

        "CanvasCache": {
            "type": "object",
            "title": "Distributed Cache Dependency",
            "properties": {

                "Name": {
                    "type": "string",
                    "title": "Name"
                },

                "ConnectionStringVariable": {
                    "type": "string",
                    "title": "Connection String Variable",
                    "description": "Name of the connection string variable to use for the distributed cache, if null then local cache will be used."
                },

                "CachePolicies": {
                    "type": "object",
                    "title": "Caching Policies",
                    "description": "Lists the currently used cache keys and their policy (TTL is relative to now, CRON is a schedule like every 5th minute)",
                    "additionalProperties": {
                        "type": "object",
                        "oneOf": [
                            {
                                "type": "object",
                                "title": "CRON Schedule",
                                "properties": {
                                    "Cron": {
                                        "type": "string",
                                        "title": "CRON Schedule",

                                        "default": "*/5 * * * *"
                                    }
                                },
                                "required": [
                                    "lorem"
                                ]
                            },
                            {
                                "type": "object",
                                "title": "Time Span (00:00:00)",
                                "properties": {
                                    "TTL": {
                                        "type": "string",
                                        "title": "Time Span (00:00:00)",

                                        "default": "00:05:00"
                                    }
                                },
                                "required": [
                                    "TTL"
                                ]
                            }
                        ]
                    }
                }
            },
            "required": [
                "Name",
                "ConnectionStringVariable"
            ]
        }
    }
}